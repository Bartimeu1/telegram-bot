import { Scenes } from 'telegraf';

import { countryRegex } from '@constants/regex.js';
import getEvents from '@services/api/getEvents.js';

const eventsScene = new Scenes.WizardScene(
  'GET_EVENTS',
  (ctx) => {
    ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–æ–º. –ü—Ä–∏–º–µ—Ä: Belarus/USA');

    return ctx.wizard.next();
  },
  async (ctx) => {
    try {
      const country = ctx.update.message.text;
      // Checking if date is in the correct format
      if (!countryRegex.test(country)) {
        return ctx.reply(
          '‚õîÔ∏è –°—Ç—Ä–∞–Ω–∞ –≤–≤–µ–¥–µ–Ω–∞ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ! ‚õîÔ∏è\n–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã',
        );
      }

      const data = await getEvents(country);

      // Checking if data is not defined
      if (!data || data.length === 0) {
        ctx.reply('–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–≤–µ–¥—ë–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ üòî\n');
        return ctx.scene.leave();
      }

      // Filtering past holidays
      const currentDate = new Date();
      const filteredData = data.filter((holiday) => {
        const targetDate = new Date(holiday.date);
        return currentDate <= targetDate;
      });

      // Checking if holidays are found
      if (filteredData.length === 0) {
        ctx.reply('–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º, –≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–µ –Ω–∏—á–µ–≥–æ –Ω–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è üßê\n');
        return ctx.scene.leave();
      }

      // Formatting data for telegram message
      const formattedData = filteredData.reduce((acc, holiday) => {
        acc += `üöó –ù–∞–∑–≤–∞–Ω–∏–µ: ${holiday.name}\nüìÖ –î–∞—Ç–∞: ${holiday.date}\n\n`;
        return acc;
      }, '');

      ctx.reply(formattedData);
      ctx.scene.leave();
    } catch (error) {
      console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π', error);
      ctx.reply(
        '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ',
      );
      ctx.scene.leave();
    }
  },
);

export default eventsScene;
