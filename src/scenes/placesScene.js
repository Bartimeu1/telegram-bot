import { Scenes } from 'telegraf';

import getPlaces from '@services/api/getPlaces.js';

const placesScene = new Scenes.WizardScene(
  'GET_PLACE',
  (ctx) => {
    ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞');

    return ctx.wizard.next();
  },
  async (ctx) => {
    try {
      const city = ctx.update.message.text;
      const data = await getPlaces(city);

      // Checking if data is not defined
      if (data.length === 0) {
        return ctx.reply('–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–≤–µ–¥—ë–Ω–Ω–æ–º—É –≥–æ—Ä–æ–¥—É üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π');
      }

      // Formatting data for telegram message
      const formattedData = await data.reduce((acc, place) => {
        acc += `üçô –ù–∞–∑–≤–∞–Ω–∏–µ: ${place.name}\nüöó –ê–¥—Ä–µ—Å: ${place.location.address}\n\n`;
        return acc;
      }, '');

      ctx.reply(formattedData);
      ctx.scene.leave();
    } catch (error) {
      console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–π', error);
      ctx.reply(
        '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ',
      );
      ctx.scene.leave();
    }
  },
);

export default placesScene;
