import { Scenes } from 'telegraf';

import getWeather from '@root/api/getWeather.js';
import { errorMessages, weatherMessages } from '@constants/text.js';

const weatherScene = new Scenes.BaseScene('GET_WEATHER_BY_CITY');

weatherScene.enter((ctx) => ctx.reply(weatherMessages.enter));

weatherScene.on('message', async (ctx) => {
  const city = ctx.update.message.text;
  ctx.reply('–°–≤–µ—Ä—è—é—Å—å —Å –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∞–º–∏...');
  try {
    const data = await getWeather(city);
    if (!data) {
      return ctx.reply(errorMessages.noData, {
        reply_markup: {
          inline_keyboard: [[{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É ‚ùå', callback_data: 'cancel' }]],
        },
      });
    }

    ctx.reply(
      `${data.name}: ${data.weather[0].description} üå§\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: ${(
        data.main.temp / 10
      ).toFixed(2)} ¬∞C\n\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${(data.main.feels_like / 10).toFixed(
        2,
      )} ¬∞C\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${(data.main.temp_min / 10).toFixed(
        2,
      )} ¬∞C\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${(data.main.temp_max / 10).toFixed(
        2,
      )} ¬∞C\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${data.wind.speed} –º/c\n–í–∏–¥–∏–º–æ—Å—Ç—å: ${data.visibility} –º–µ—Ç—Ä–æ–≤`,
    );
  } catch (err) {
    ctx.reply(errorMessages.error);
  }

  ctx.scene.leave();
});

weatherScene.action('cancel', (ctx) => {
  ctx.editMessageReplyMarkup();

  ctx.reply('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ');
  ctx.scene.leave();
});

export default weatherScene;
