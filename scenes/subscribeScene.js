import { Scenes } from 'telegraf';
import slug from 'slug';
import subscribeUser from '../services/subscribeUser.js';
import getWeather from '../services/getWeather.js';

const subscribeScene = new Scenes.BaseScene('SUBSCRIBE_USER');

subscribeScene.enter((ctx) =>
  ctx.reply(`–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: Minsk \n–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ '–û—Ç–º–µ–Ω–∞'`),
);

subscribeScene.on('message', async (ctx) => {
  const message = slug(ctx.update.message.text);

  if (message.toLowerCase() === '–æ—Ç–º–µ–Ω–∞') {
    ctx.reply('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–¥–ø–∏—Å–∫–∏');
    ctx.scene.leave();
  }

  const data = await getWeather(message);
  if (!data) {
    ctx.reply('–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ üòî');
  } else {
    const candidate = subscribeUser(ctx.message.from.id, ctx.update.message.text);
    
    ctx.reply(
      candidate ? '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã' : `–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –ø–æ –≥–æ—Ä–æ–¥—É: ${data.location.name} üå§`,
    );
    ctx.scene.leave();
  }
});

export default subscribeScene;
