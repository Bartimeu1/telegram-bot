import { Scenes } from 'telegraf';

import addSubscriber from '../services/subscriber/addSubscriber.js';
import isSubscribed from '../services/subscriber/isSubscribed.js';
import getWeather from '../services/api/getWeather.js';

const subscribeScene = new Scenes.BaseScene('SUBSCRIBE_USER');

subscribeScene.enter(async (ctx) => {
  if (await isSubscribed(ctx.message.chat.id)) {
    ctx.reply('–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!\n–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤–≤–µ–¥–∏—Ç–µ /unsubscribe');
    ctx.scene.leave();
  } else {
    ctx.reply(`–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–≥–æ–¥–µ üåÜ`, {
      reply_markup: {
        inline_keyboard: [[{ text: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É ‚ùå', callback_data: 'cancel' }]],
      },
    });
  }
});

subscribeScene.on('message', async (ctx) => {
  const city = ctx.update.message.text;
  const data = await getWeather(city);

  if (!data) {
    ctx.reply('–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ üòî\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π');
  } else {
    addSubscriber(ctx.message.from.id, city);
    ctx.reply(`–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –ø–æ –≥–æ—Ä–æ–¥—É: ${data.location.name}! üå§`);

    ctx.scene.leave();
  }
});

subscribeScene.action('cancel', (ctx) => {
  ctx.editMessageReplyMarkup();

  ctx.reply('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ');
  ctx.scene.leave();
});

export default subscribeScene;
